{"version":3,"sources":["../src/AbstractState.js"],"names":["AbstractState","name","initialState","reducerParts","actionTypes","actions","actionName","payload","type"],"mappings":";;;;;;;;AAAA;;;;IAEqBA,a;AAEnB,yBAAYC,IAAZ,EAAkBC,YAAlB,EAAmD;AAAA,QAAnBC,YAAmB,uEAAJ,EAAI;;AAAA;;AACjD,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,OAAL,GAAe,EAAf;AACD;;;;mCAEcC,U,EAAY;AACzB,WAAKF,WAAL,CAAiBE,UAAjB,IAA+B,mDAA6B,KAAKL,IAAlC,EAAwCK,UAAxC,CAA/B;AACD;;;+BAEUA,U,EAAY;AAAA;;AACrB,WAAKD,OAAL,CAAaC,UAAb,IAA2B,UAACC,OAAD;AAAA,eAAc;AACvCC,gBAAM,MAAKJ,WAAL,CAAiBE,UAAjB,CADiC;AAEvCC;AAFuC,SAAd;AAAA,OAA3B;AAID;;;;;;kBAnBkBP,a","file":"AbstractState.js","sourcesContent":["import {makeActionTypeFromActionName} from './makeActionTypes'\n\nexport default class AbstractState {\n\n  constructor(name, initialState, reducerParts = {}) {\n    this.name = name\n    this.initialState = initialState\n    this.reducerParts = reducerParts\n    this.actionTypes = {}\n    this.actions = {}\n  }\n\n  makeActionType(actionName) {\n    this.actionTypes[actionName] = makeActionTypeFromActionName(this.name, actionName)\n  }\n\n  makeAction(actionName) {\n    this.actions[actionName] = (payload) => ({\n      type: this.actionTypes[actionName],\n      payload\n    })\n  }\n\n}\n"]}