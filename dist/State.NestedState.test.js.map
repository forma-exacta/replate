{"version":3,"sources":["../src/State.NestedState.test.js"],"names":["makeCollectionState","byId","add","state","action","payload","_id","remove","newState","allIds","slice","push","splice","indexOf","describe","it","expect","actionTypes","toEqual","actions","any","Function","reducer","undefined","state1","type"],"mappings":"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","file":"State.NestedState.test.js","sourcesContent":["import State from './State'\nimport {makeActionTypeFromActionName} from './makeActionTypes'\nimport {combineReducers} from 'redux'\n\nconst makeCollectionState = () => {\n  return new State('State', {}, {\n    byId: new State('byId', {}, {\n      add: (state, action) => ({\n        ...state,\n        [action.payload._id]: action.payload\n      }),\n      remove: (state, action) => {\n        let newState = {...state}\n        delete newState[action.payload._id]\n        return newState\n      }\n    }),\n    allIds: new State('allIds', [], {\n      add: (state, action) => {\n        let newState = state.slice()\n        newState.push(action.payload._id)\n        return newState\n      },\n      remove: (state, action) => {\n        let newState = state.slice();\n        newState.splice(newState.indexOf(action.payload._id), 1)\n        return newState\n      }\n    })\n  })\n}\n\ndescribe('State', () => {\n\n  it('generates types, actions, and reducer', () => {\n    const state = makeCollectionState()\n\n    expect(state.actionTypes).toEqual({\n      add: makeActionTypeFromActionName('State', 'add'),\n      remove: makeActionTypeFromActionName('State', 'remove'),\n    })\n    expect(state.actions).toEqual({\n      add: expect.any(Function),\n      remove: expect.any(Function)\n    })\n    expect(state.reducer).toEqual({\n      byId: expect.any(Function),\n      allIds: expect.any(Function)\n    })\n  })\n\n  it('sets default state', () => {\n    const state = makeCollectionState()\n\n    expect(combineReducers(state.reducer)(undefined, {})).toEqual({byId:{},allIds:[]})\n  })\n\n  it('reducer responds to all action types', () => {\n\n    const state = makeCollectionState()\n\n    const state1 = {\n      byId: {1: {_id: 1}},\n      allIds: [1]\n    }\n\n    expect(state.reducer.byId({}, {type: state.actionTypes.add, payload: {_id:1}})).toEqual({1: {_id: 1}})\n    expect(state.reducer.byId({1: {_id: 1}}, {type: state.actionTypes.remove, payload: {_id:1}})).toEqual({})\n    expect(state.reducer.allIds([], {type: state.actionTypes.add, payload: {_id:1}})).toEqual([1])\n    expect(state.reducer.allIds([1], {type: state.actionTypes.remove, payload: {_id:1}})).toEqual([])\n  })\n\n})\n"]}