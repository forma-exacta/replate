{"version":3,"sources":["../src/Duck.js"],"names":["addActionOptions","addActionType","addReducerOptions","addAction","Duck","domainName","_domainName","_actionTypes","_actions","_reducers","_reducer","actionName","action","options","actionType","type","reducerName","reducer","payload","initialState","state","actions","Object","keys","forEach","reducers","addReducer"],"mappings":";;;;;;;;;;AAAA;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA,mBAAmB;AACvBC,iBAAe;AADQ,CAAzB;;AAIA,IAAMC,oBAAoB;AACxBC,aAAW;AADa,CAA1B;;IAIqBC,I;AAEnB,gBAAYC,UAAZ,EAAwB;AAAA;;AACtB,SAAKC,WAAL,GAAmBD,UAAnB;AACA,SAAKE,YAAL,GAAoB,EAApB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,QAAL,GAAgB,YAAM,CAAE,CAAxB;AACD;;;;8BAQSC,U,EAAYC,M,EAAQC,O,EAAS;AACrCA,6BAAcb,gBAAd,EAAmCa,OAAnC;;AAEA,UAAGA,QAAQZ,aAAX,EAA0B;AACxB,YAAMa,aAAa,mDAA6B,KAAKR,WAAlC,EAA+CK,UAA/C,CAAnB;AACA,aAAKJ,YAAL,CAAkBI,UAAlB,IAAgCG,UAAhC;AACA,aAAKN,QAAL,CAAcG,UAAd,IAA4B,YAAa;AACvC;AACEI,kBAAMD;AADR,aAEKF,kCAFL;AAID,SALD;AAMD,OATD,MAUK;AACH,aAAKJ,QAAL,CAAcG,UAAd,IAA4BC,MAA5B;AACD;AACF;;;+BAEUI,W,EAAaC,O,EAASJ,O,EAAS;AACxCA,6BAAcX,iBAAd,EAAoCW,OAApC;;AAEA,UAAGA,QAAQV,SAAX,EAAsB;AACpB,aAAKA,SAAL,CAAea,WAAf,EAA4B,UAACE,OAAD,EAAa;AAAC,iBAAO,EAACA,gBAAD,EAAP;AAAiB,SAA3D,EAA6D,EAACjB,eAAe,IAAhB,EAA7D;AACA,aAAKQ,SAAL,CAAeO,WAAf,IAA8B,+BAAYH,QAAQM,YAAR,IAAwB,IAApC,sBAC3B,KAAKZ,YAAL,CAAkBS,WAAlB,CAD2B,YACKI,KADL,EACYR,MADZ,EACoB;AAC9C,iBAAOK,QAAQG,KAAR,EAAeR,MAAf,CAAP;AACD,SAH2B,EAA9B;AAKD,OAPD,MAQK;AACH,aAAKH,SAAL,CAAeO,WAAf,IAA8BC,OAA9B;AACD;AACD,WAAKP,QAAL,GAAgB,4BAAgB,KAAKD,SAArB,CAAhB;AACD;;;+BAEUY,O,EAASR,O,EAAS;AAAA;;AAC3B,WAAKL,QAAL,GAAgB,EAAhB;AACAc,aAAOC,IAAP,CAAYF,OAAZ,EAAqBG,OAArB,CAA6B,UAACb,UAAD;AAAA,eAAgB,MAAKR,SAAL,CAAeQ,UAAf,EAA2BU,QAAQV,UAAR,CAA3B,EAAgDE,OAAhD,CAAhB;AAAA,OAA7B;AACD;;;gCAEWY,Q,EAAUZ,O,EAAS;AAAA;;AAC7B,WAAKJ,SAAL,GAAiB,EAAjB;AACAa,aAAOC,IAAP,CAAYE,QAAZ,EAAsBD,OAAtB,CAA8B,UAACR,WAAD;AAAA,eAAiB,OAAKU,UAAL,CAAgBV,WAAhB,EAA6BS,SAAST,WAAT,CAA7B,EAAoDH,OAApD,CAAjB;AAAA,OAA9B;AACD;;;wBAjDgB;AAAC,aAAO,KAAKP,WAAZ;AAAwB;;;wBACxB;AAAC,aAAO,KAAKC,YAAZ;AAAyB;;;wBAC9B;AAAC,aAAO,KAAKC,QAAZ;AAAqB;;;wBACrB;AAAC,aAAO,KAAKC,SAAZ;AAAsB;;;wBACxB;AAAC,aAAO,KAAKC,QAAZ;AAAqB;;;;;;kBAdjBN,I","file":"Duck.js","sourcesContent":["import {combineReducers} from 'redux'\r\nimport makeActionTypes, {makeActionType, makeActionTypeFromActionName} from './makeActionTypes'\r\nimport {makeReducer} from './makeReducers'\r\n\r\nconst addActionOptions = {\r\n  addActionType: true\r\n}\r\n\r\nconst addReducerOptions = {\r\n  addAction: true\r\n}\r\n\r\nexport default class Duck {\r\n\r\n  constructor(domainName) {\r\n    this._domainName = domainName\r\n    this._actionTypes = {}\r\n    this._actions = {}\r\n    this._reducers = {}\r\n    this._reducer = () => {}\r\n  }\r\n\r\n  get domainName() {return this._domainName}\r\n  get actionTypes() {return this._actionTypes}\r\n  get actions() {return this._actions}\r\n  get reducers() {return this._reducers}\r\n  get reducer() {return this._reducer}\r\n\r\n  addAction(actionName, action, options) {\r\n    options = {...addActionOptions, ...options}\r\n    \r\n    if(options.addActionType) {\r\n      const actionType = makeActionTypeFromActionName(this._domainName, actionName)\r\n      this._actionTypes[actionName] = actionType\r\n      this._actions[actionName] = (...args) => {\r\n        return {\r\n          type: actionType,\r\n          ...action(...args)\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      this._actions[actionName] = action\r\n    }\r\n  }\r\n\r\n  addReducer(reducerName, reducer, options) {\r\n    options = {...addReducerOptions, ...options}\r\n\r\n    if(options.addAction) {\r\n      this.addAction(reducerName, (payload) => {return {payload}}, {addActionType: true})\r\n      this._reducers[reducerName] = makeReducer(options.initialState || null, {\r\n        [this._actionTypes[reducerName]](state, action) {\r\n          return reducer(state, action)\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      this._reducers[reducerName] = reducer\r\n    }\r\n    this._reducer = combineReducers(this._reducers)\r\n  }\r\n\r\n  setActions(actions, options) {\r\n    this._actions = {}\r\n    Object.keys(actions).forEach((actionName) => this.addAction(actionName, actions[actionName], options))\r\n  }\r\n\r\n  setReducers(reducers, options) {\r\n    this._reducers = {}\r\n    Object.keys(reducers).forEach((reducerName) => this.addReducer(reducerName, reducers[reducerName], options))\r\n  }\r\n\r\n}\r\n"]}