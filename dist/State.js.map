{"version":3,"sources":["../src/State.js"],"names":["State","name","initialState","reducerParts","init","reducerKeys","Object","keys","length","reducer","makeSubState","makeReducerMap","actionTypes","actions","undefined","reduce","result","key","makeActionType","makeAction","subState","reinit","assign"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;IAEqBA,K;;;AAEnB,iBAAYC,IAAZ,EAAkBC,YAAlB,EAAmD;AAAA,QAAnBC,YAAmB,uEAAJ,EAAI;;AAAA;;AAAA,8GAC3CF,IAD2C,EACrCC,YADqC,EACvBC,YADuB;;AAGjD,UAAKC,IAAL;AAHiD;AAIlD;;;;2BAEM;AAAA;;AACL,UAAMC,cAAcC,OAAOC,IAAP,CAAY,KAAKJ,YAAjB,CAApB;AACA,UAAGE,YAAYG,MAAZ,GAAqB,CAAxB,EAA2B;AACzB,aAAKC,OAAL,GAAe;AAAA,iBAAM,OAAKP,YAAX;AAAA,SAAf,CADyB,CACc;AACxC,OAFD,MAGK,IAAG,KAAKC,YAAL,CAAkBE,YAAY,CAAZ,CAAlB,oCAAH,EAA+D;AAClE;AACA,aAAKI,OAAL,GAAe,KAAKC,YAAL,CAAkB,KAAKP,YAAvB,CAAf;AACD,OAHI,MAIA;AACH;AACA,aAAKM,OAAL,GAAe,8BAAY,KAAKP,YAAjB,EAA+B,KAAKS,cAAL,CAAoB,KAAKR,YAAzB,CAA/B,CAAf;AACD;AACF;;;6BAEQ;AACP,WAAKS,WAAL,GAAmB,EAAnB;AACA,WAAKC,OAAL,GAAe,EAAf;AACA,WAAKJ,OAAL,GAAeK,SAAf;AACA,WAAKV,IAAL;AACD;;;mCAEcD,Y,EAAc;AAAA;;AAC3B,aAAOG,OAAOC,IAAP,CAAYJ,YAAZ,EAA0BY,MAA1B,CAAiC,UAACC,MAAD,EAASC,GAAT,EAAiB;AACvD,eAAKC,cAAL,CAAoBD,GAApB;AACA,eAAKE,UAAL,CAAgBF,GAAhB;;AAEAD,eAAO,OAAKJ,WAAL,CAAiBK,GAAjB,CAAP,IAAgCd,aAAac,GAAb,CAAhC;AACA,eAAOD,MAAP;AACD,OANM,EAMJ,EANI,CAAP;AAOD;;;iCAEYb,Y,EAAc;AAAA;;AACzB,aAAOG,OAAOC,IAAP,CAAYJ,YAAZ,EAA0BY,MAA1B,CAAiC,UAACC,MAAD,EAASC,GAAT,EAAiB;AACvD,YAAMG,WAAWjB,aAAac,GAAb,CAAjB;AACAG,iBAASnB,IAAT,GAAgB,OAAKA,IAArB;AACAmB,iBAASC,MAAT;AACAf,eAAOgB,MAAP,CAAc,OAAKV,WAAnB,EAAgCQ,SAASR,WAAzC;AACAN,eAAOgB,MAAP,CAAc,OAAKT,OAAnB,EAA4BO,SAASP,OAArC;;AAEAG,eAAOC,GAAP,IAAcG,SAASX,OAAvB;AACA,eAAOO,MAAP;AACD,OATM,EASJ,EATI,CAAP;AAUD;;;;;;kBAnDkBhB,K","file":"State.js","sourcesContent":["import AbstractState from './AbstractState'\nimport {makeReducer} from './makeReducer'\n\nexport default class State extends AbstractState {\n\n  constructor(name, initialState, reducerParts = {}) {\n    super(name, initialState, reducerParts)\n\n    this.init()\n  }\n\n  init() {\n    const reducerKeys = Object.keys(this.reducerParts)\n    if(reducerKeys.length < 1) {\n      this.reducer = () => this.initialState // don't know why you want static state, but there you go\n    }\n    else if(this.reducerParts[reducerKeys[0]] instanceof AbstractState) {\n      // 'Nested' State\n      this.reducer = this.makeSubState(this.reducerParts)\n    }\n    else {\n      // 'Value' State\n      this.reducer = makeReducer(this.initialState, this.makeReducerMap(this.reducerParts))\n    }\n  }\n\n  reinit() {\n    this.actionTypes = {}\n    this.actions = {}\n    this.reducer = undefined\n    this.init()\n  }\n\n  makeReducerMap(reducerParts) {\n    return Object.keys(reducerParts).reduce((result, key) => {\n      this.makeActionType(key)\n      this.makeAction(key)\n\n      result[this.actionTypes[key]] = reducerParts[key]\n      return result\n    }, {})\n  }\n\n  makeSubState(reducerParts) {\n    return Object.keys(reducerParts).reduce((result, key) => {\n      const subState = reducerParts[key]\n      subState.name = this.name\n      subState.reinit()\n      Object.assign(this.actionTypes, subState.actionTypes)\n      Object.assign(this.actions, subState.actions)\n\n      result[key] = subState.reducer\n      return result\n    }, {})\n  }\n\n}\n"]}