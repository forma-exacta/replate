{"version":3,"sources":["../src/makeActionTypes.js"],"names":["crudPartials","makeActionType","domainName","partial","toUpperCase","makeActionTypeFromActionName","actionName","underscored","replace","$1","$2","$3","substring","length","makeActionTypesFromActions","actions","Object","keys","reduce","result","makeCRUDActionTypes","makeActionTypes","partials"],"mappings":";;;;;;;;;;AAEO,IAAMA,sCAAe,CAC1B,QAD0B,EAE1B,QAF0B,EAG1B,QAH0B,CAArB;;AAMA,IAAMC,0CAAiB,SAAjBA,cAAiB,CAACC,UAAD,EAAaC,OAAb,EAAyB;AACrD,SAAUD,WAAWE,WAAX,EAAV,SAAsCD,QAAQC,WAAR,EAAtC;AACD,CAFM;;AAIA,IAAMC,sEAA+B,SAA/BA,4BAA+B,CAACH,UAAD,EAAaI,UAAb,EAA4B;AACtE,MAAIC,cAAcD,WAAWE,OAAX,CAAmB,sBAAnB,EAA2C,OAA3C,CAAlB;AACAD,gBAAcA,YAAYC,OAAZ,CAAoB,yBAApB,EAA+C,UAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAgB;AAC3E,WAAUD,GAAGE,SAAH,CAAa,CAAb,EAAgBF,GAAGG,MAAH,GAAY,CAA5B,CAAV,SAA4CH,GAAGE,SAAH,CAAaF,GAAGG,MAAH,GAAY,CAAzB,CAA5C,GAA0EF,EAA1E;AACD,GAFa,CAAd;AAGAJ,gBAAcA,YAAYH,WAAZ,EAAd;AACA,SAAOH,eAAeC,UAAf,EAA2BK,WAA3B,CAAP;AACD,CAPM;;AASA,IAAMO,kEAA6B,SAA7BA,0BAA6B,CAACZ,UAAD,EAAaa,OAAb,EAAyB;AACjE,SAAOC,OAAOC,IAAP,CAAYF,OAAZ,EAAqBG,MAArB,CAA4B,UAACC,MAAD,EAASb,UAAT,EAAwB;AACzD,wBAAWa,MAAX,sBAAoBb,UAApB,EAAiCD,6BAA6BH,UAA7B,EAAyCI,UAAzC,CAAjC;AACD,GAFM,EAEJ,EAFI,CAAP;AAGD,CAJM;;AAMA,IAAMc,oDAAsB,SAAtBA,mBAAsB,CAAClB,UAAD,EAAgB;AACjD,SAAOmB,gBAAgBnB,UAAhB,EAA4BF,YAA5B,CAAP;AACD,CAFM;;AAIP,IAAMqB,kBAAkB,SAAlBA,eAAkB,CAACnB,UAAD,EAAaoB,QAAb,EAA0B;AAChDA,aAAWA,YAAYtB,YAAvB;;AAEA,SAAOsB,SAASJ,MAAT,CAAgB,UAACC,MAAD,EAAShB,OAAT,EAAqB;AAC1CgB,WAAOhB,QAAQC,WAAR,EAAP,IAAgCH,eAAeC,UAAf,EAA2BC,OAA3B,CAAhC;AACA,WAAOgB,MAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID,CAPD;;kBASeE,e","file":"makeActionTypes.js","sourcesContent":["\r\n\r\nexport const crudPartials = [\r\n  'CREATE',\r\n  'UPDATE',\r\n  'DELETE'\r\n]\r\n\r\nexport const makeActionType = (domainName, partial) => {\r\n  return `${domainName.toUpperCase()}:${partial.toUpperCase()}`\r\n}\r\n\r\nexport const makeActionTypeFromActionName = (domainName, actionName) => {\r\n  let underscored = actionName.replace(/([a-z]+)([A-Z0-9]+)/g, '$1_$2')\r\n  underscored = underscored.replace(/([A-Z0-9]{2,})([a-z]+)/g, ($1, $2, $3) => {\r\n    return `${$2.substring(0, $2.length - 1)}_${$2.substring($2.length - 1)}${$3}`\r\n  })\r\n  underscored = underscored.toUpperCase()\r\n  return makeActionType(domainName, underscored)\r\n}\r\n\r\nexport const makeActionTypesFromActions = (domainName, actions) => {\r\n  return Object.keys(actions).reduce((result, actionName) => {\r\n    return {...result, [actionName]: makeActionTypeFromActionName(domainName, actionName)}\r\n  }, {})\r\n}\r\n\r\nexport const makeCRUDActionTypes = (domainName) => {\r\n  return makeActionTypes(domainName, crudPartials)\r\n}\r\n\r\nconst makeActionTypes = (domainName, partials) => {\r\n  partials = partials || crudPartials\r\n\r\n  return partials.reduce((result, partial) => {\r\n    result[partial.toUpperCase()] = makeActionType(domainName, partial)\r\n    return result\r\n  }, {})\r\n}\r\n\r\nexport default makeActionTypes\r\n"]}