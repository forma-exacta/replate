{"version":3,"sources":["../src/makeActionTypes.js"],"names":["makeActionType","domainName","partial","namespace","toUpperCase","makeActionTypeFromActionName","actionName","underscore","string","underscored","replace","$1","$2","$3","substring","length","makeActionTypesFromActions","actions","Object","keys","reduce","result","makeActionTypes","partials","crudPartials"],"mappings":";;;;;;;;;AAAA;;;;AAEO,IAAMA,0CAAiB,SAAjBA,cAAiB,CAACC,UAAD,EAAaC,OAAb,EAAyB;AACrD,eAAU,OAAO,iCAAaC,SAApB,IAAiC,WAAjC,GAA+C,iCAAaA,SAAb,GAAyB,GAAxE,GAA8E,EAAxF,IAA6FF,WAAWG,WAAX,EAA7F,SAAyHF,QAAQE,WAAR,EAAzH;AACD,CAFM;;AAIA,IAAMC,sEAA+B,SAA/BA,4BAA+B,CAACJ,UAAD,EAAaK,UAAb,EAA4B;AACtE,SAAON,eAAeO,WAAWN,UAAX,CAAf,EAAuCM,WAAWD,UAAX,CAAvC,CAAP;AACD,CAFM;;AAIA,IAAMC,kCAAa,SAAbA,UAAa,CAACC,MAAD,EAAY;AACpC,MAAIC,cAAcD,OAAOE,OAAP,CAAe,sBAAf,EAAuC,OAAvC,CAAlB;AACAD,gBAAcA,YAAYC,OAAZ,CAAoB,yBAApB,EAA+C,UAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAgB;AAC3E,WAAUD,GAAGE,SAAH,CAAa,CAAb,EAAgBF,GAAGG,MAAH,GAAY,CAA5B,CAAV,SAA4CH,GAAGE,SAAH,CAAaF,GAAGG,MAAH,GAAY,CAAzB,CAA5C,GAA0EF,EAA1E;AACD,GAFa,CAAd;AAGAJ,gBAAcA,YAAYL,WAAZ,EAAd;AACA,SAAOK,WAAP;AACD,CAPM;;AASA,IAAMO,kEAA6B,SAA7BA,0BAA6B,CAACf,UAAD,EAAagB,OAAb,EAAyB;AACjE,SAAOC,OAAOC,IAAP,CAAYF,OAAZ,EAAqBG,MAArB,CAA4B,UAACC,MAAD,EAASf,UAAT,EAAwB;AACzD,wBAAWe,MAAX,sBAAoBf,UAApB,EAAiCD,6BAA6BJ,UAA7B,EAAyCK,UAAzC,CAAjC;AACD,GAFM,EAEJ,EAFI,CAAP;AAGD,CAJM;;AAMP,IAAMgB,kBAAkB,SAAlBA,eAAkB,CAACrB,UAAD,EAAasB,QAAb,EAA0B;AAChDA,aAAWA,YAAYC,YAAvB;;AAEA,SAAOD,SAASH,MAAT,CAAgB,UAACC,MAAD,EAASnB,OAAT,EAAqB;AAC1CmB,WAAOnB,QAAQE,WAAR,EAAP,IAAgCJ,eAAeC,UAAf,EAA2BC,OAA3B,CAAhC;AACA,WAAOmB,MAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID,CAPD;;kBASeC,e","file":"makeActionTypes.js","sourcesContent":["import {getOptions} from './globalOptions'\r\n\r\nexport const makeActionType = (domainName, partial) => {\r\n  return `${typeof getOptions().namespace != 'undefined' ? getOptions().namespace + '.' : ''}${domainName.toUpperCase()}:${partial.toUpperCase()}`\r\n}\r\n\r\nexport const makeActionTypeFromActionName = (domainName, actionName) => {\r\n  return makeActionType(underscore(domainName), underscore(actionName))\r\n}\r\n\r\nexport const underscore = (string) => {\r\n  let underscored = string.replace(/([a-z]+)([A-Z0-9]+)/g, '$1_$2')\r\n  underscored = underscored.replace(/([A-Z0-9]{2,})([a-z]+)/g, ($1, $2, $3) => {\r\n    return `${$2.substring(0, $2.length - 1)}_${$2.substring($2.length - 1)}${$3}`\r\n  })\r\n  underscored = underscored.toUpperCase()\r\n  return underscored\r\n}\r\n\r\nexport const makeActionTypesFromActions = (domainName, actions) => {\r\n  return Object.keys(actions).reduce((result, actionName) => {\r\n    return {...result, [actionName]: makeActionTypeFromActionName(domainName, actionName)}\r\n  }, {})\r\n}\r\n\r\nconst makeActionTypes = (domainName, partials) => {\r\n  partials = partials || crudPartials\r\n\r\n  return partials.reduce((result, partial) => {\r\n    result[partial.toUpperCase()] = makeActionType(domainName, partial)\r\n    return result\r\n  }, {})\r\n}\r\n\r\nexport default makeActionTypes\r\n"]}