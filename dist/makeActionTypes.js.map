{"version":3,"sources":["../src/makeActionTypes.js"],"names":["makeActionType","domainName","partial","toUpperCase","makeActionTypeFromActionName","actionName","underscore","string","underscored","replace","$1","$2","$3","substring","length","makeActionTypesFromActions","actions","Object","keys","reduce","result","makeActionTypes","partials","crudPartials"],"mappings":";;;;;;;;;;AAAO,IAAMA,0CAAiB,SAAjBA,cAAiB,CAACC,UAAD,EAAaC,OAAb,EAAyB;AACrD,SAAUD,WAAWE,WAAX,EAAV,SAAsCD,QAAQC,WAAR,EAAtC;AACD,CAFM;;AAIA,IAAMC,sEAA+B,SAA/BA,4BAA+B,CAACH,UAAD,EAAaI,UAAb,EAA4B;AACtE,SAAOL,eAAeM,WAAWL,UAAX,CAAf,EAAuCK,WAAWD,UAAX,CAAvC,CAAP;AACD,CAFM;;AAIA,IAAMC,kCAAa,SAAbA,UAAa,CAACC,MAAD,EAAY;AACpC,MAAIC,cAAcD,OAAOE,OAAP,CAAe,sBAAf,EAAuC,OAAvC,CAAlB;AACAD,gBAAcA,YAAYC,OAAZ,CAAoB,yBAApB,EAA+C,UAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAgB;AAC3E,WAAUD,GAAGE,SAAH,CAAa,CAAb,EAAgBF,GAAGG,MAAH,GAAY,CAA5B,CAAV,SAA4CH,GAAGE,SAAH,CAAaF,GAAGG,MAAH,GAAY,CAAzB,CAA5C,GAA0EF,EAA1E;AACD,GAFa,CAAd;AAGAJ,gBAAcA,YAAYL,WAAZ,EAAd;AACA,SAAOK,WAAP;AACD,CAPM;;AASA,IAAMO,kEAA6B,SAA7BA,0BAA6B,CAACd,UAAD,EAAae,OAAb,EAAyB;AACjE,SAAOC,OAAOC,IAAP,CAAYF,OAAZ,EAAqBG,MAArB,CAA4B,UAACC,MAAD,EAASf,UAAT,EAAwB;AACzD,wBAAWe,MAAX,sBAAoBf,UAApB,EAAiCD,6BAA6BH,UAA7B,EAAyCI,UAAzC,CAAjC;AACD,GAFM,EAEJ,EAFI,CAAP;AAGD,CAJM;;AAMP,IAAMgB,kBAAkB,SAAlBA,eAAkB,CAACpB,UAAD,EAAaqB,QAAb,EAA0B;AAChDA,aAAWA,YAAYC,YAAvB;;AAEA,SAAOD,SAASH,MAAT,CAAgB,UAACC,MAAD,EAASlB,OAAT,EAAqB;AAC1CkB,WAAOlB,QAAQC,WAAR,EAAP,IAAgCH,eAAeC,UAAf,EAA2BC,OAA3B,CAAhC;AACA,WAAOkB,MAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID,CAPD;;kBASeC,e","file":"makeActionTypes.js","sourcesContent":["export const makeActionType = (domainName, partial) => {\r\n  return `${domainName.toUpperCase()}:${partial.toUpperCase()}`\r\n}\r\n\r\nexport const makeActionTypeFromActionName = (domainName, actionName) => {\r\n  return makeActionType(underscore(domainName), underscore(actionName))\r\n}\r\n\r\nexport const underscore = (string) => {\r\n  let underscored = string.replace(/([a-z]+)([A-Z0-9]+)/g, '$1_$2')\r\n  underscored = underscored.replace(/([A-Z0-9]{2,})([a-z]+)/g, ($1, $2, $3) => {\r\n    return `${$2.substring(0, $2.length - 1)}_${$2.substring($2.length - 1)}${$3}`\r\n  })\r\n  underscored = underscored.toUpperCase()\r\n  return underscored\r\n}\r\n\r\nexport const makeActionTypesFromActions = (domainName, actions) => {\r\n  return Object.keys(actions).reduce((result, actionName) => {\r\n    return {...result, [actionName]: makeActionTypeFromActionName(domainName, actionName)}\r\n  }, {})\r\n}\r\n\r\nconst makeActionTypes = (domainName, partials) => {\r\n  partials = partials || crudPartials\r\n\r\n  return partials.reduce((result, partial) => {\r\n    result[partial.toUpperCase()] = makeActionType(domainName, partial)\r\n    return result\r\n  }, {})\r\n}\r\n\r\nexport default makeActionTypes\r\n"]}