{"version":3,"sources":["../src/makeReducers.js"],"names":["makeReducer","initialState","handlers","reducer","state","action","hasOwnProperty","type","makeCRUDReducers","domainName","actionTypes","byId","CREATE","payload","_id","UPDATE","DELETE","newState","allIds","slice","push","splice","indexOf"],"mappings":";;;;;;;;;AAAA;;;;AAEO,IAAMA,oCAAc,SAAdA,WAAc,CAACC,YAAD,EAAeC,QAAf,EAA4B;AACrD,SAAO,SAASC,OAAT,GAA+C;AAAA,QAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,QAARI,MAAQ;;AACpD,QAAGH,SAASI,cAAT,CAAwBD,OAAOE,IAA/B,CAAH,EAAyC;AACvC,aAAOL,SAASG,OAAOE,IAAhB,EAAsBH,KAAtB,EAA6BC,MAA7B,CAAP;AACD,KAFD,MAGK;AACH,aAAOD,KAAP;AACD;AACF,GAPD;AAQD,CATM;;AAWA,IAAMI,8CAAmB,SAAnBA,gBAAmB,CAACC,UAAD,EAAgB;AAAA;;AAE9C,MAAMC,cAAc,0CAAoBD,UAApB,CAApB;;AAEA,MAAME,OAAOX,YAAY,EAAZ,oDACVU,YAAYE,MADF,YACUR,KADV,EACiBC,MADjB,EACyB;AAClC,wBAAWD,KAAX,sBAAmBC,OAAOQ,OAAP,CAAeC,GAAlC,EAAwCT,OAAOQ,OAA/C;AACD,GAHU,iCAIVH,YAAYK,MAJF,YAIUX,KAJV,EAIiBC,MAJjB,EAIyB;AAClC,wBAAWD,KAAX,sBAAmBC,OAAOQ,OAAP,CAAeC,GAAlC,EAAwCT,OAAOQ,OAA/C;AACD,GANU,iCAOVH,YAAYM,MAPF,YAOUZ,KAPV,EAOiBC,MAPjB,EAOyB;AAClC,QAAIY,wBAAeb,KAAf,CAAJ;AACA,WAAOa,SAASZ,OAAOQ,OAAP,CAAeC,GAAxB,CAAP;AACA,WAAOG,QAAP;AACD,GAXU,iBAAb;;AAcA,MAAMC,SAASlB,YAAY,EAAZ,sDACZU,YAAYE,MADA,YACQR,KADR,EACeC,MADf,EACuB;AAClC,QAAIY,WAAWb,MAAMe,KAAN,EAAf;AACAF,aAASG,IAAT,CAAcf,OAAOQ,OAAP,CAAeC,GAA7B;AACA,WAAOG,QAAP;AACD,GALY,kCAMZP,YAAYM,MANA,YAMQZ,KANR,EAMeC,MANf,EAMuB;AAClC,QAAIY,WAAWb,MAAMe,KAAN,EAAf;AACAF,aAASI,MAAT,CAAgBJ,SAASK,OAAT,CAAiBjB,OAAOQ,OAAP,CAAeC,GAAhC,CAAhB,EAAsD,CAAtD;AACA,WAAOG,QAAP;AACD,GAVY,kBAAf;;AAaA,SAAO,EAACN,UAAD,EAAOO,cAAP,EAAP;AAED,CAjCM","file":"makeReducers.js","sourcesContent":["import {makeCRUDActionTypes} from './makeActionTypes'\r\n\r\nexport const makeReducer = (initialState, handlers) => {\r\n  return function reducer(state = initialState, action) {\r\n    if(handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action);\r\n    }\r\n    else {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport const makeCRUDReducers = (domainName) => {\r\n\r\n  const actionTypes = makeCRUDActionTypes(domainName)\r\n\r\n  const byId = makeReducer({}, {\r\n    [actionTypes.CREATE](state, action) {\r\n      return {...state, [action.payload._id]: action.payload}\r\n    },\r\n    [actionTypes.UPDATE](state, action) {\r\n      return {...state, [action.payload._id]: action.payload}\r\n    },\r\n    [actionTypes.DELETE](state, action) {\r\n      let newState = {...state}\r\n      delete newState[action.payload._id]\r\n      return newState\r\n    },\r\n  })\r\n\r\n  const allIds = makeReducer([], {\r\n    [actionTypes.CREATE](state, action) {\r\n      let newState = state.slice()\r\n      newState.push(action.payload._id)\r\n      return newState\r\n    },\r\n    [actionTypes.DELETE](state, action) {\r\n      let newState = state.slice();\r\n      newState.splice(newState.indexOf(action.payload._id), 1)\r\n      return newState\r\n    }\r\n  })\r\n\r\n  return {byId, allIds}\r\n\r\n}\r\n"]}